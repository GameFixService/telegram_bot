from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ConversationHandler, ContextTypes

TOKEN = "–¢–£–¢_–í–°–¢–ê–í_–¢–û–ö–ï–ù_–ë–û–¢–ê"
CHAT_ID = -1002555460055

# –°—Ç–∞–Ω –¥—ñ–∞–ª–æ–≥—É
DEVICE, ISSUE, CONTACT = range(3)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç GameFix. –©–æ –∑–ª–∞–º–∞–ª–æ—Å—å?")
    return DEVICE

async def device(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['device'] = update.message.text
    await update.message.reply_text("–û–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ –ø—Ä–æ–±–ª–µ–º—É:")
    return ISSUE

async def issue(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['issue'] = update.message.text
    await update.message.reply_text("–ó–∞–ª–∏—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ @username):")
    return CONTACT

async def contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['contact'] = update.message.text

    # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    msg = (
        "üì© *–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ GameFix:*\n\n"
        f"üõ†Ô∏è –ü—Ä–∏—Å—Ç—Ä—ñ–π: {context.user_data['device']}\n"
        f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞: {context.user_data['issue']}\n"
        f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {context.user_data['contact']}\n"
        "#GameFix #–∑–∞—è–≤–∫–∞"
    )

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤ –≥—Ä—É–ø—É
    await context.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="Markdown")

    await update.message.reply_text("–î—è–∫—É—é! –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ ‚úÖ")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–°–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            DEVICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, device)],
            ISSUE: [MessageHandler(filters.TEXT & ~filters.COMMAND, issue)],
            CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, contact)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()
